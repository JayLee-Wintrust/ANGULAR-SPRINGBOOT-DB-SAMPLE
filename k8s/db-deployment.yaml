apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: db
    app.kubernetes.io/version: 0.0.1
    app.kubernetes.io/part-of: employee-manager
  name: db
  namespace: employee-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: db
      app.kubernetes.io/version: 0.0.1
      app.kubernetes.io/part-of: employee-manager
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: db
        app.kubernetes.io/version: 0.0.1
        app.kubernetes.io/part-of: employee-manager
    spec:
      containers:
        - env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: postgres-password
          image: localhost:5000/db:0.0.1
          livenessProbe:
            exec:
              command:
                - pg_isready
          name: db
          ports:
            - containerPort: 5432
              hostPort: 5432
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: db-data
            - name: init-db-sql
              mountPath: "/docker-entrypoint-initdb.d"
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: db-data
        - name: init-db-sql
          configMap:
            name: init-db-sql
